/*
 * Build file for Yahtzee
 */

plugins { 
	// https://docs.gradle.org/current/userguide/java_plugin.html
	id 'java'
	        
	// https://docs.gradle.org/current/userguide/eclipse_plugin.html
    id 'eclipse'     
    
    // https://docs.gradle.org/current/userguide/idea_plugin.html
    id 'idea'        
    
    // https://docs.gradle.org/current/userguide/jacoco_plugin.html
    id 'jacoco'	
    
    // https://docs.gradle.org/current/userguide/pmd_plugin.html
    id 'pmd'     
    
	// commenting out the checkstyle so that I do not see all the indentation warnings
    // https://docs.gradle.org/current/userguide/checkstyle_plugin.html
    // id 'checkstyle' 
}

ext { // define variables for version number of different components
	junit_version = '5.7.0'
	junit_platform_version = '1.7.0'
}

java { // https://docs.gradle.org/current/userguide/java_plugin.html#sec:java-extension
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
	withJavadocJar()
	withSourcesJar()	
}

repositories { // https://docs.gradle.org/current/userguide/declaring_repositories.html
    jcenter()
    mavenCentral()
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}
 
dependencies { // https://docs.gradle.org/current/userguide/declaring_dependencies.html

	//https://junit.org/junit5/docs/current/user-guide/index.html#dependency-metadata
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit_version}"    
	testImplementation "org.junit.jupiter:junit-jupiter-api:${junit_version}"	
	testImplementation "org.junit.jupiter:junit-jupiter-params:${junit_version}"
	testImplementation "org.junit.platform:junit-platform-runner:${junit_platform_version}"
	testImplementation "org.junit.platform:junit-platform-suite-api:${junit_platform_version}"
	testImplementation "org.junit.platform:junit-platform-engine:${junit_platform_version}"
	testCompile "org.mockito:mockito-core:2.+"
}

test { // https://docs.gradle.org/5.2.1/userguide/java_testing.html#using_junit5 
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

// https://docs.gradle.org/current/userguide/jacoco_plugin.html#sec:configuring_the_jacoco_plugin
jacoco { 
	toolVersion = "0.8.6"
}

// https://docs.gradle.org/current/userguide/jacoco_plugin.html#sec:jacoco_report_configuration
jacocoTestReport {
	reports {
	  csv.enabled true
	  html.destination file("$buildDir/jacocoHtml")
	}
}

// Remove this to avoid seeing indentation errors when uploading to the github
// checkstyle {
// 	toolVersion "8.40"
// 	configFile file("config/checkstyle/google_checks_modified.xml")
// }

pmd {
    ignoreFailures = true
}

// ensure that Javadoc does not fail our build
tasks.withType(Javadoc) {
	options.addStringOption('Xdoclint:none', '-quiet')
}

